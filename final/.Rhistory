friend = keywords$朋友詞[keywords$朋友詞 != ""]
target = keywords$人稱代名詞
target = as.character(target [target != ""])
# sum(frq[frq$TDM.d %in% friend ,2])
# sum(frq[frq$TDM.d %in% positive[1] ,2])
# sum(frq[frq$TDM.d %in% negative ,2])
# sum(frq[frq$TDM.d %in% target ,2])
# sum(frq[frq$TDM.d %in% acknowledge ,2])
# sum(frq$tf)
#抓人稱代名詞前後的情緒詞
#
# count_pos = data.frame(matrix(ncol = 7,nrow = len))
# names(count_pos) = target
# count_neg = count_pos
#
count = matrix(0,nrow = 7)
for (i in c(1:len)){
flag = target %in% seg[[i]]
# count_pos[i,flag] = sum(temp[temp$d %in% positive,2 ])
# count_neg[i,flag] = sum(temp[temp$d %in% negative,2 ])
if(sum(flag)!=0){
temp = tokens[[i]]
for(t in c(1:7)){
count[t,] = count[t,] + sum(temp[temp$d %in% target[t],2])
}}
}
count
# sum(count_pos[!is.na(count_pos)])
# sum(count_neg[!is.na(count_neg)])
# for(i in c(1:len)){
#    if(ncol(tokens[[i]]) !=2)
#      print(i)}
library(NLP)
library(tm)
library(tmcn)
library(stringr)
library(jiebaRD)
library(jiebaR)
#輸入文本名稱，需要在文本開頭加入一行colname不然會讀錯
#ex:
# text
# 有位小朋友送來一個絨作的小熊。白絨作的面龐...
# 她說：“甚麼？我沒聽清楚，你說嫵媚？我還從...
# 我接著又說我看小熊多嫵媚，小熊看我應如是。”...
# 我是從來沒有眼對眼看到過熊的。所以熊的形象在...
text = read.csv(file = "余光中-記憶像鐵軌一樣長.txt",quote = "",na.strings="NA",sep = "\t",encoding = "UTF-8")
text = as.character(text[,1])
data.corpus = Corpus(VectorSource(text))
data.corpus = tm_map(data.corpus, removePunctuation)
data.corpus = tm_map(data.corpus, removeNumbers)
data.corpus = tm_map(data.corpus, function(word){gsub("[a-zA-Z]","",word) })
mixseg = worker()
#注意字典的檔案格式以及命名
# keywords = read.csv("字典.csv",quote = "",sep = ",")
# new_user_word(mixseg, as.matrix(keywords[keywords != ""]))
#
# jieba_tokenizer = function(d){
#   unlist( segment(d[[1]], mixseg) )
# }
seg = lapply(data.corpus, jieba_tokenizer)
# count_token = function(d){
#   as.data.frame(table(d))
# }
tokens = lapply(seg, count_token)
#計算總字頻
len = length(seg)
# TDM = tokens[[1]]
# for( id in c(2:len) ){
#   # names(tokens[[id]]) = c('d', as.character(id))
#   TDM = merge(TDM, tokens[[id]], by='d', all = TRUE)
#   names(TDM) = c('d', as.character(c(1:id)))
# }
# TDM[is.na(TDM)] = 0
#
# tf = rowSums(TDM[,2:(len+1)])
# frq = data.frame(TDM$d , tf)
#依據字典，從frq裡面取出要觀察的單字
positive = keywords$正面情緒詞[keywords$正面情緒詞 != ""]
negative = keywords$負面情緒詞[keywords$負面情緒詞 != ""]
acknowledge = keywords$認知歷程詞[keywords$認知歷程詞 != ""]
friend = keywords$朋友詞[keywords$朋友詞 != ""]
target = keywords$人稱代名詞
target = as.character(target [target != ""])
# sum(frq[frq$TDM.d %in% friend ,2])
# sum(frq[frq$TDM.d %in% positive[1] ,2])
# sum(frq[frq$TDM.d %in% negative ,2])
# sum(frq[frq$TDM.d %in% target ,2])
# sum(frq[frq$TDM.d %in% acknowledge ,2])
# sum(frq$tf)
#抓人稱代名詞前後的情緒詞
#
# count_pos = data.frame(matrix(ncol = 7,nrow = len))
# names(count_pos) = target
# count_neg = count_pos
#
count = matrix(0,nrow = 7)
for (i in c(1:len)){
flag = target %in% seg[[i]]
# count_pos[i,flag] = sum(temp[temp$d %in% positive,2 ])
# count_neg[i,flag] = sum(temp[temp$d %in% negative,2 ])
if(sum(flag)!=0){
temp = tokens[[i]]
for(t in c(1:7)){
count[t,] = count[t,] + sum(temp[temp$d %in% target[t],2])
}}
}
count
# sum(count_pos[!is.na(count_pos)])
# sum(count_neg[!is.na(count_neg)])
# for(i in c(1:len)){
#    if(ncol(tokens[[i]]) !=2)
#      print(i)}
library(NLP)
library(tm)
library(tmcn)
library(stringr)
library(jiebaRD)
library(jiebaR)
#輸入文本名稱，需要在文本開頭加入一行colname不然會讀錯
#ex:
# text
# 有位小朋友送來一個絨作的小熊。白絨作的面龐...
# 她說：“甚麼？我沒聽清楚，你說嫵媚？我還從...
# 我接著又說我看小熊多嫵媚，小熊看我應如是。”...
# 我是從來沒有眼對眼看到過熊的。所以熊的形象在...
text = read.csv(file = "余光中-南半球的冬天.txt",quote = "",na.strings="NA",sep = "\t",encoding = "UTF-8")
text = as.character(text[,1])
data.corpus = Corpus(VectorSource(text))
data.corpus = tm_map(data.corpus, removePunctuation)
data.corpus = tm_map(data.corpus, removeNumbers)
data.corpus = tm_map(data.corpus, function(word){gsub("[a-zA-Z]","",word) })
mixseg = worker()
#注意字典的檔案格式以及命名
# keywords = read.csv("字典.csv",quote = "",sep = ",")
# new_user_word(mixseg, as.matrix(keywords[keywords != ""]))
#
# jieba_tokenizer = function(d){
#   unlist( segment(d[[1]], mixseg) )
# }
seg = lapply(data.corpus, jieba_tokenizer)
# count_token = function(d){
#   as.data.frame(table(d))
# }
tokens = lapply(seg, count_token)
#計算總字頻
len = length(seg)
# TDM = tokens[[1]]
# for( id in c(2:len) ){
#   # names(tokens[[id]]) = c('d', as.character(id))
#   TDM = merge(TDM, tokens[[id]], by='d', all = TRUE)
#   names(TDM) = c('d', as.character(c(1:id)))
# }
# TDM[is.na(TDM)] = 0
#
# tf = rowSums(TDM[,2:(len+1)])
# frq = data.frame(TDM$d , tf)
#依據字典，從frq裡面取出要觀察的單字
positive = keywords$正面情緒詞[keywords$正面情緒詞 != ""]
negative = keywords$負面情緒詞[keywords$負面情緒詞 != ""]
acknowledge = keywords$認知歷程詞[keywords$認知歷程詞 != ""]
friend = keywords$朋友詞[keywords$朋友詞 != ""]
target = keywords$人稱代名詞
target = as.character(target [target != ""])
# sum(frq[frq$TDM.d %in% friend ,2])
# sum(frq[frq$TDM.d %in% positive[1] ,2])
# sum(frq[frq$TDM.d %in% negative ,2])
# sum(frq[frq$TDM.d %in% target ,2])
# sum(frq[frq$TDM.d %in% acknowledge ,2])
# sum(frq$tf)
#抓人稱代名詞前後的情緒詞
#
# count_pos = data.frame(matrix(ncol = 7,nrow = len))
# names(count_pos) = target
# count_neg = count_pos
#
count = matrix(0,nrow = 7)
for (i in c(1:len)){
flag = target %in% seg[[i]]
# count_pos[i,flag] = sum(temp[temp$d %in% positive,2 ])
# count_neg[i,flag] = sum(temp[temp$d %in% negative,2 ])
if(sum(flag)!=0){
temp = tokens[[i]]
for(t in c(1:7)){
count[t,] = count[t,] + sum(temp[temp$d %in% target[t],2])
}}
}
count
# sum(count_pos[!is.na(count_pos)])
# sum(count_neg[!is.na(count_neg)])
# for(i in c(1:len)){
#    if(ncol(tokens[[i]]) !=2)
#      print(i)}
library(NLP)
library(tm)
library(tmcn)
library(stringr)
library(jiebaRD)
library(jiebaR)
#輸入文本名稱，需要在文本開頭加入一行colname不然會讀錯
#ex:
# text
# 有位小朋友送來一個絨作的小熊。白絨作的面龐...
# 她說：“甚麼？我沒聽清楚，你說嫵媚？我還從...
# 我接著又說我看小熊多嫵媚，小熊看我應如是。”...
# 我是從來沒有眼對眼看到過熊的。所以熊的形象在...
text = read.csv(file = "余光中-西歐的夏天.txt",quote = "",na.strings="NA",sep = "\t",encoding = "UTF-8")
text = as.character(text[,1])
data.corpus = Corpus(VectorSource(text))
data.corpus = tm_map(data.corpus, removePunctuation)
data.corpus = tm_map(data.corpus, removeNumbers)
data.corpus = tm_map(data.corpus, function(word){gsub("[a-zA-Z]","",word) })
mixseg = worker()
#注意字典的檔案格式以及命名
# keywords = read.csv("字典.csv",quote = "",sep = ",")
# new_user_word(mixseg, as.matrix(keywords[keywords != ""]))
#
# jieba_tokenizer = function(d){
#   unlist( segment(d[[1]], mixseg) )
# }
seg = lapply(data.corpus, jieba_tokenizer)
# count_token = function(d){
#   as.data.frame(table(d))
# }
tokens = lapply(seg, count_token)
#計算總字頻
len = length(seg)
# TDM = tokens[[1]]
# for( id in c(2:len) ){
#   # names(tokens[[id]]) = c('d', as.character(id))
#   TDM = merge(TDM, tokens[[id]], by='d', all = TRUE)
#   names(TDM) = c('d', as.character(c(1:id)))
# }
# TDM[is.na(TDM)] = 0
#
# tf = rowSums(TDM[,2:(len+1)])
# frq = data.frame(TDM$d , tf)
#依據字典，從frq裡面取出要觀察的單字
positive = keywords$正面情緒詞[keywords$正面情緒詞 != ""]
negative = keywords$負面情緒詞[keywords$負面情緒詞 != ""]
acknowledge = keywords$認知歷程詞[keywords$認知歷程詞 != ""]
friend = keywords$朋友詞[keywords$朋友詞 != ""]
target = keywords$人稱代名詞
target = as.character(target [target != ""])
# sum(frq[frq$TDM.d %in% friend ,2])
# sum(frq[frq$TDM.d %in% positive[1] ,2])
# sum(frq[frq$TDM.d %in% negative ,2])
# sum(frq[frq$TDM.d %in% target ,2])
# sum(frq[frq$TDM.d %in% acknowledge ,2])
# sum(frq$tf)
#抓人稱代名詞前後的情緒詞
#
# count_pos = data.frame(matrix(ncol = 7,nrow = len))
# names(count_pos) = target
# count_neg = count_pos
#
count = matrix(0,nrow = 7)
for (i in c(1:len)){
flag = target %in% seg[[i]]
# count_pos[i,flag] = sum(temp[temp$d %in% positive,2 ])
# count_neg[i,flag] = sum(temp[temp$d %in% negative,2 ])
if(sum(flag)!=0){
temp = tokens[[i]]
for(t in c(1:7)){
count[t,] = count[t,] + sum(temp[temp$d %in% target[t],2])
}}
}
count
# sum(count_pos[!is.na(count_pos)])
# sum(count_neg[!is.na(count_neg)])
# for(i in c(1:len)){
#    if(ncol(tokens[[i]]) !=2)
#      print(i)}
library(NLP)
library(tm)
library(tmcn)
library(stringr)
library(jiebaRD)
library(jiebaR)
#輸入文本名稱，需要在文本開頭加入一行colname不然會讀錯
#ex:
# text
# 有位小朋友送來一個絨作的小熊。白絨作的面龐...
# 她說：“甚麼？我沒聽清楚，你說嫵媚？我還從...
# 我接著又說我看小熊多嫵媚，小熊看我應如是。”...
# 我是從來沒有眼對眼看到過熊的。所以熊的形象在...
text = read.csv(file = "余光中-牛蛙記.txt",quote = "",na.strings="NA",sep = "\t",encoding = "UTF-8")
text = as.character(text[,1])
data.corpus = Corpus(VectorSource(text))
data.corpus = tm_map(data.corpus, removePunctuation)
data.corpus = tm_map(data.corpus, removeNumbers)
data.corpus = tm_map(data.corpus, function(word){gsub("[a-zA-Z]","",word) })
mixseg = worker()
#注意字典的檔案格式以及命名
# keywords = read.csv("字典.csv",quote = "",sep = ",")
# new_user_word(mixseg, as.matrix(keywords[keywords != ""]))
#
# jieba_tokenizer = function(d){
#   unlist( segment(d[[1]], mixseg) )
# }
seg = lapply(data.corpus, jieba_tokenizer)
# count_token = function(d){
#   as.data.frame(table(d))
# }
tokens = lapply(seg, count_token)
#計算總字頻
len = length(seg)
# TDM = tokens[[1]]
# for( id in c(2:len) ){
#   # names(tokens[[id]]) = c('d', as.character(id))
#   TDM = merge(TDM, tokens[[id]], by='d', all = TRUE)
#   names(TDM) = c('d', as.character(c(1:id)))
# }
# TDM[is.na(TDM)] = 0
#
# tf = rowSums(TDM[,2:(len+1)])
# frq = data.frame(TDM$d , tf)
#依據字典，從frq裡面取出要觀察的單字
positive = keywords$正面情緒詞[keywords$正面情緒詞 != ""]
negative = keywords$負面情緒詞[keywords$負面情緒詞 != ""]
acknowledge = keywords$認知歷程詞[keywords$認知歷程詞 != ""]
friend = keywords$朋友詞[keywords$朋友詞 != ""]
target = keywords$人稱代名詞
target = as.character(target [target != ""])
# sum(frq[frq$TDM.d %in% friend ,2])
# sum(frq[frq$TDM.d %in% positive[1] ,2])
# sum(frq[frq$TDM.d %in% negative ,2])
# sum(frq[frq$TDM.d %in% target ,2])
# sum(frq[frq$TDM.d %in% acknowledge ,2])
# sum(frq$tf)
#抓人稱代名詞前後的情緒詞
#
# count_pos = data.frame(matrix(ncol = 7,nrow = len))
# names(count_pos) = target
# count_neg = count_pos
#
count = matrix(0,nrow = 7)
for (i in c(1:len)){
flag = target %in% seg[[i]]
# count_pos[i,flag] = sum(temp[temp$d %in% positive,2 ])
# count_neg[i,flag] = sum(temp[temp$d %in% negative,2 ])
if(sum(flag)!=0){
temp = tokens[[i]]
for(t in c(1:7)){
count[t,] = count[t,] + sum(temp[temp$d %in% target[t],2])
}}
}
count
# sum(count_pos[!is.na(count_pos)])
# sum(count_neg[!is.na(count_neg)])
# for(i in c(1:len)){
#    if(ncol(tokens[[i]]) !=2)
#      print(i)}
library(NLP)
library(tm)
library(tmcn)
library(stringr)
library(jiebaRD)
library(jiebaR)
#輸入文本名稱，需要在文本開頭加入一行colname不然會讀錯
#ex:
# text
# 有位小朋友送來一個絨作的小熊。白絨作的面龐...
# 她說：“甚麼？我沒聽清楚，你說嫵媚？我還從...
# 我接著又說我看小熊多嫵媚，小熊看我應如是。”...
# 我是從來沒有眼對眼看到過熊的。所以熊的形象在...
text = read.csv(file = "余光中-不朽，是一堆頑石.txt",quote = "",na.strings="NA",sep = "\t",encoding = "UTF-8")
text = as.character(text[,1])
data.corpus = Corpus(VectorSource(text))
data.corpus = tm_map(data.corpus, removePunctuation)
data.corpus = tm_map(data.corpus, removeNumbers)
data.corpus = tm_map(data.corpus, function(word){gsub("[a-zA-Z]","",word) })
mixseg = worker()
#注意字典的檔案格式以及命名
# keywords = read.csv("字典.csv",quote = "",sep = ",")
# new_user_word(mixseg, as.matrix(keywords[keywords != ""]))
#
# jieba_tokenizer = function(d){
#   unlist( segment(d[[1]], mixseg) )
# }
seg = lapply(data.corpus, jieba_tokenizer)
# count_token = function(d){
#   as.data.frame(table(d))
# }
tokens = lapply(seg, count_token)
#計算總字頻
len = length(seg)
# TDM = tokens[[1]]
# for( id in c(2:len) ){
#   # names(tokens[[id]]) = c('d', as.character(id))
#   TDM = merge(TDM, tokens[[id]], by='d', all = TRUE)
#   names(TDM) = c('d', as.character(c(1:id)))
# }
# TDM[is.na(TDM)] = 0
#
# tf = rowSums(TDM[,2:(len+1)])
# frq = data.frame(TDM$d , tf)
#依據字典，從frq裡面取出要觀察的單字
positive = keywords$正面情緒詞[keywords$正面情緒詞 != ""]
negative = keywords$負面情緒詞[keywords$負面情緒詞 != ""]
acknowledge = keywords$認知歷程詞[keywords$認知歷程詞 != ""]
friend = keywords$朋友詞[keywords$朋友詞 != ""]
target = keywords$人稱代名詞
target = as.character(target [target != ""])
# sum(frq[frq$TDM.d %in% friend ,2])
# sum(frq[frq$TDM.d %in% positive[1] ,2])
# sum(frq[frq$TDM.d %in% negative ,2])
# sum(frq[frq$TDM.d %in% target ,2])
# sum(frq[frq$TDM.d %in% acknowledge ,2])
# sum(frq$tf)
#抓人稱代名詞前後的情緒詞
#
# count_pos = data.frame(matrix(ncol = 7,nrow = len))
# names(count_pos) = target
# count_neg = count_pos
#
count = matrix(0,nrow = 7)
for (i in c(1:len)){
flag = target %in% seg[[i]]
# count_pos[i,flag] = sum(temp[temp$d %in% positive,2 ])
# count_neg[i,flag] = sum(temp[temp$d %in% negative,2 ])
if(sum(flag)!=0){
temp = tokens[[i]]
for(t in c(1:7)){
count[t,] = count[t,] + sum(temp[temp$d %in% target[t],2])
}}
}
count
# sum(count_pos[!is.na(count_pos)])
# sum(count_neg[!is.na(count_neg)])
# for(i in c(1:len)){
#    if(ncol(tokens[[i]]) !=2)
#      print(i)}
library(NLP)
library(tm)
library(tmcn)
library(stringr)
library(jiebaRD)
library(jiebaR)
#輸入文本名稱，需要在文本開頭加入一行colname不然會讀錯
#ex:
# text
# 有位小朋友送來一個絨作的小熊。白絨作的面龐...
# 她說：“甚麼？我沒聽清楚，你說嫵媚？我還從...
# 我接著又說我看小熊多嫵媚，小熊看我應如是。”...
# 我是從來沒有眼對眼看到過熊的。所以熊的形象在...
text = read.csv(file = "太宰治-人間失格.txt",quote = "",na.strings="NA",sep = "\t",encoding = "UTF-8")
text = as.character(text[,1])
data.corpus = Corpus(VectorSource(text))
data.corpus = tm_map(data.corpus, removePunctuation)
data.corpus = tm_map(data.corpus, removeNumbers)
data.corpus = tm_map(data.corpus, function(word){gsub("[a-zA-Z]","",word) })
mixseg = worker()
#注意字典的檔案格式以及命名
# keywords = read.csv("字典.csv",quote = "",sep = ",")
# new_user_word(mixseg, as.matrix(keywords[keywords != ""]))
#
# jieba_tokenizer = function(d){
#   unlist( segment(d[[1]], mixseg) )
# }
seg = lapply(data.corpus, jieba_tokenizer)
# count_token = function(d){
#   as.data.frame(table(d))
# }
tokens = lapply(seg, count_token)
#計算總字頻
len = length(seg)
# TDM = tokens[[1]]
# for( id in c(2:len) ){
#   # names(tokens[[id]]) = c('d', as.character(id))
#   TDM = merge(TDM, tokens[[id]], by='d', all = TRUE)
#   names(TDM) = c('d', as.character(c(1:id)))
# }
# TDM[is.na(TDM)] = 0
#
# tf = rowSums(TDM[,2:(len+1)])
# frq = data.frame(TDM$d , tf)
#依據字典，從frq裡面取出要觀察的單字
positive = keywords$正面情緒詞[keywords$正面情緒詞 != ""]
negative = keywords$負面情緒詞[keywords$負面情緒詞 != ""]
acknowledge = keywords$認知歷程詞[keywords$認知歷程詞 != ""]
friend = keywords$朋友詞[keywords$朋友詞 != ""]
target = keywords$人稱代名詞
target = as.character(target [target != ""])
# sum(frq[frq$TDM.d %in% friend ,2])
# sum(frq[frq$TDM.d %in% positive[1] ,2])
# sum(frq[frq$TDM.d %in% negative ,2])
# sum(frq[frq$TDM.d %in% target ,2])
# sum(frq[frq$TDM.d %in% acknowledge ,2])
# sum(frq$tf)
#抓人稱代名詞前後的情緒詞
#
# count_pos = data.frame(matrix(ncol = 7,nrow = len))
# names(count_pos) = target
# count_neg = count_pos
#
count = matrix(0,nrow = 7)
for (i in c(1:len)){
flag = target %in% seg[[i]]
# count_pos[i,flag] = sum(temp[temp$d %in% positive,2 ])
# count_neg[i,flag] = sum(temp[temp$d %in% negative,2 ])
if(sum(flag)!=0){
temp = tokens[[i]]
for(t in c(1:7)){
count[t,] = count[t,] + sum(temp[temp$d %in% target[t],2])
}}
}
count
# sum(count_pos[!is.na(count_pos)])
# sum(count_neg[!is.na(count_neg)])
# for(i in c(1:len)){
#    if(ncol(tokens[[i]]) !=2)
#      print(i)}
