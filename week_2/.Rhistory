summary(iris)
for( i in c(1:9)){
cat(i , "x" , i , " = " , i^2 , "\n")
}
for( i in c(1:9)){
for( j in c(1:9)){
cat(i , "x" , j , " = " , i*j , "\n")
}
}
1 && 1
for( i in c(1:10) ){
if(nums[i] > 50 && nums[i] % 2 == 0){
print("偶數且大於50, 數字:" , nums[i] , quote = FALSE)
}
if(nums[i] == 66){
printf("太66666666666了")
break
}
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for( i in c(1:10) ){
if(nums[i] > 50 && nums[i] % 2 == 0){
print("偶數且大於50, 數字:" , nums[i] , quote = FALSE)
}
if(nums[i] == 66){
printf("太66666666666了")
break
}
}
for(i in c(1:10))
i
for(i in c(1:10))
print(i)
for( i in c(1:10) )
if(nums[i] == 66){
print("太66666666666了");
i <- 11;
}else if(nums[i] > 50 && nums[i] % 2 == 0){
print("偶數且大於50, 數字:" , nums[i] , quote = FALSE) ;
}
}
for( i in c(1:10) )
if(nums[i] == 66){
print("太66666666666了");
i <- 11;
}else if(nums[i] > 50 && nums[i] % 2 == 0){
print("偶數且大於50, 數字:" , nums[i] ) ;
}
}
for( i in c(1:10) )
if(nums[i] == 66){
print("太66666666666了");
break;
}else if(nums[i] > 50 && nums[i] % 2 == 0){
print("偶數且大於50, 數字:" , nums[i] ) ;
}
}
TRUE & FALSE
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print("偶數且大於50, 數字:" , nums[i])
if(nums[i] == 66)
print("太66666666666了")
}
print("1","2")
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
nums <- sample(c(10:100),size = 10)
# 查看nums
nums
for(i in c(1:10)){
if( (nums[i] > 50) & (nums[i] %% 2 == 0) )
print(paste("偶數且大於50, 數字: " , nums[i]))
if(nums[i] == 66)
print("太66666666666了")
}
year <- sample(1000:9999 , 1)
if( year %% 400 == 0 || (year %% 4 == 0 & year %% 100 != 0) ){
cat(year , "是閏年" , "\n")
}	else{
cat(year , "是平年" , "\n")
}
year <- sample(1000:9999 , 1)
if( year %% 400 == 0 || (year %% 4 == 0 & year %% 100 != 0) ){
cat(year , "是閏年" , "\n")
}	else{
cat(year , "是平年" , "\n")
}
year <- sample(1000:9999 , 1)
if( year %% 400 == 0 || (year %% 4 == 0 & year %% 100 != 0) ){
cat(year , "是閏年" , "\n")
}	else{
cat(year , "是平年" , "\n")
}
year <- sample(1000:9999 , 1)
if( year %% 400 == 0 || (year %% 4 == 0 & year %% 100 != 0) ){
cat(year , "是閏年" , "\n")
}	else{
cat(year , "是平年" , "\n")
}
code <- sample(1000:9999 , 1)
code <- unlist(strsplit(paste(code),""))
state <- 1
while(state){
A <- 0
B <- 0
input <- readline(prompt = "please guess a four-digit number :")
input <- unlist(strsplit(input,"") )
if(length(input) != 4){
print("error")
}
else if( length(c(1:4)[input == code]) == 4){
print("correct!")
print("number of missed guesses :" , state)
break
}
else{
print("wrong!")
for(i in c(1:4)){
for(j in c(1:4)){
if(code[i] == input[j]){
if(i == j) A <- A+1
else B <- B+1
}
}
}
cat(A,"A" , B, "B\n")
state <- state + 1
}
}
# 猜數字遊戲
# 1. 請寫一個由電腦隨機產生不同數字的四位數(1A2B遊戲)
# 2. 玩家可重覆猜電腦所產生的數字，並提示猜測的結果(EX:1A2B)
# 3. 一旦猜對，系統可自動計算玩家猜測的次數
code <- sample(1000:9999 , 1)
code <- unlist(strsplit(paste(code),""))
state <- 1
while(state){
A <- 0
B <- 0
input <- readline(prompt = "please guess a four-digit number :")
input <- unlist(strsplit(input,"") )
if(length(input) != 4){
print("error")
}
else if( length(c(1:4)[input == code]) == 4){
print("correct!")
print(paste("number of missed guesses :" , state))
break
}
else{
print("wrong!")
for(i in c(1:4)){
for(j in c(1:4)){
if(code[i] == input[j]){
if(i == j) A <- A+1
else B <- B+1
}
}
}
cat(A,"A" , B, "B\n")
state <- state + 1
}
}
code <- sample(0:9 , 4)
code <- unlist(strsplit(code,""))
state <- 1
while(state){
A <- 0
B <- 0
input <- readline(prompt = "please guess a four-digit number :")
input <- unlist(strsplit(input,"") )
if(length(input) != 4){
print("error")
}
else if( length(c(1:4)[input == code]) == 4){
print("correct!")
print(paste("number of guesses :" , state))
break
}
else{
print("wrong!")
for(i in c(1:4)){
for(j in c(1:4)){
if(code[i] == input[j]){
if(i == j) A <- A+1
else B <- B+1
}
}
}
cat(A,"A" , B, "B\n")
state <- state + 1
}
}
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = F)
# 使用dim()查看df的維度(列數與欄數)
dim(df)
# 使用head()查看df前6筆資料
head(df)
# 使用tail()查看df後6筆資料
tail(df)
# 使用summary()查看df的描述性統計
summary(df)
# 使用str()查看df的詳細資訊
str(df)
# 將df$School與df$Sex轉為factor型態
df$School <- as.factor(df$School)
df$Sex <- as.factor(df$Sex)
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = F)
# 使用dim()查看df的維度(列數與欄數)
dim(df)
# 使用head()查看df前6筆資料
head(df)
# 使用tail()查看df後6筆資料
tail(df)
# 使用summary()查看df的描述性統計
summary(df)
# 使用str()查看df的詳細資訊
str(df)
setwd("~/Desktop/CSX_4001_106-2")
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = F)
setwd("~/Desktop/CSX_4001_106-2/week_2/course_2")
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = F)
# 使用dim()查看df的維度(列數與欄數)
dim(df)
# 使用head()查看df前6筆資料
head(df)
# 使用tail()查看df後6筆資料
tail(df)
df$School <- as.factor(df$School)
df$Sex <- as.factor(df$Sex)
dim(df)
# 使用head()查看df前6筆資料
head(df)
# 使用tail()查看df後6筆資料
tail(df)
# 使用summary()查看df的描述性統計
summary(df)
# 使用str()查看df的詳細資訊
str(df)
setwd("~/Desktop/CSX_4001_106-2/week_2")
# 這使得kobe資料內的型態都被轉存為chr了
Height <- c(179, 165, 158, 165, 172, 170, 168, 163, 169, 155)
Weight <- c(69, 62, 46, 50, 72, 70, 52, 49, 63, 49)
Kobe <- c("Kobe", "A", "M", NA, 39, 198, 96)
df <- cbind(df, Height, Weight)
df <- rbind(df, Kobe)
str(df)
summary(df)
df
df$Grade[df$Grade = NA] <- 990
df$Grade[df$Grade == NA] <- 990
df$Grade[is.NA] <- 990
df$Grade[is.NA(df)] <- 990
df$Grade[df$Grade == NA] <- 990
df
df$Grade[df$Grade == NA] <- 990
df
df$Grade[is.na(df$Grade)] <- 990
df
df$Grade <- as.integer(df$Grade)
df$Age <- as.numeric(df$Age)
df$Height <- as.numeric(df$Height)
df$Weight <- as.numeric(df$Weight)
df
str(df)
df <- df[order(df$Grade, decreasing = T), ]
df
df <- subset(df, select = c(-df$Age))
df
df <- subset(df, select = c(-Age))
df
names(df)[Grade] <- "ToeicGrade"
names(df)[df$Grade] <- "ToeicGrade"
names(df[Grade]) <- "ToeicGrade"
names(df)[-Grade] <- "ToeicGrade"
names(df)[df$Grade] <- "ToeicGrade"
names(df)[4] <- "ToeicGrade"
# 使用subset()，篩選出ToeicGrade大於900並且身高大於170的人
# 且欄位只需要Name, ToeicGrade與Height
subset(df, Height > 170 & ToeicGrade > 900, select = c(Name, ToeicGrade, Height))
# 不使用subset()，篩選出df中School A的人。
df[df$School == "A", ]
### Part III - 資料框整理技巧II #####################################################
df.sport <- data.frame(Name = c("Ali", "Petty", "Kobe"), FavSport = c("basketball", "baseball", "baseketball"))
df.sport <- data.frame(Name = c("Ali", "Petty", "Kobe"), FavSport = c("basketball", "baseball", "baseketball"))
# 使用cut()，在df中新增一個ToeicLevel欄位，內容為df的ToeicGrade分類後結果
# 分類breaks為c(0, 600, 700, 800, 900, Inf)
# 分類labels為c("E", "D", "C", "B", "A")
df$ToeicLevel <- cut(x = df$ToeicGrade,
breaks = c(0,600,700,800,900,Inf),
labels = c("E","D","C","B","A"))
df
df$Bmi <- mapply(GetBmi, df$Height,df$Weight)
df$Bmi <- mapply(GetBmi(), df$Height,df$Weight)
df$Bmi <- mapply(df$Height,df$Weight,GetBmi)
df$Bmi <- mapply(GetBmi,df$Height,df$Weight)
df$Bmi <- mapply(GetBmi(),df$Height,df$Weight,1)
GetBmi
GetBmi()
GetBmi <- function (my.height.cm, my.weight.kg) {
# Create my.height.m by my.height.cm
my.height.m <- my.height.cm / 100
# Create my.bmi with BMI(Body Mass Index) formula
my.bmi <- my.wight.kg / (my.height.m ^2)
# Return my.bmi
return (my.bmi)
}
df$Bmi <- mapply(GetBmi(),df$Height,df$Weight)
df$Bmi <- mapply(GetBmi,df$Height,df$Weight)
df$Bmi <- mapply(GetBmi(df$Height,df$Weight))
df$Bmi <- mapply(GetBmi(),df$Height,df$Weight)
df$Bmi <- mapply(GetBmi,df$Height,df$Weight)
GetBmi()
help(mapply(function, ...))
help(mapply
)
df$Bmi <- mapply(GetBmi, c(df$Height, df$Weight) )
GetBmi <- function (my.height.cm, my.weight.kg) {
# Create my.height.m by my.height.cm
my.height.m <- my.height.cm / 100
# Create my.bmi with BMI(Body Mass Index) formula
my.bmi <- my.weight.kg / (my.height.m ^2)
# Return my.bmi
return (my.bmi)
}
df$Bmi <- mapply(GetBmi, df$Height, df$Weight)
df
df <- merge(df, df.sport, by = 'Name', all.x = T)
View(df)
library(httr)
install.packages("httr")
library(httr)
url <- "http://ecshweb.pchome.com.tw/search/v3.3/all/results?q=sony&page=1&sort=rnk/dc"
res = GET(url)
res_json = content(res)
do.call(rbind,res_json$prods)
View(data.frame(do.call(rbind,res_json$prods)))
library(knitr)
install.packages("knitr)
"
)
install.packages("knitr")
install.packages("knitr")
clear
clear()
A = 123
type = "hi"
type <- "hi"
install.packages('rvest')
